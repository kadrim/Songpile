# This is a basic workflow to help you get started with Actions
name: 'Coverage'

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  coverage:
    strategy:
      matrix:
        node-version: [16]

    # The type of runner that the job will run on
    runs-on: ubuntu-22.04

    steps:
    - uses: actions/checkout@v3

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}

    - name: Get npm cache directory
      id: npm-cache-dir
      shell: bash
      run: echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}

    - name: Cache node modules
      uses: actions/cache@v3
      id: npm-cache # use this to check for `cache-hit` ==> if: steps.npm-cache.outputs.cache-hit != 'true'
      env:
        cache-name: cache-node-modules
      with:
        path: ${{ steps.npm-cache-dir.outputs.dir }}
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-

    - name: Install linux dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libgtk-3-dev webkit2gtk-4.0 libappindicator3-dev librsvg2-dev patchelf fluxbox

    - name: Install Dependencies
      run: npm i

    - name: Generate Code Coverage
      uses: GabrielBB/xvfb-action@v1
      with:
        run: npm run coverage

    - name: Fetch branch name
      run: |
        # var REF = 'refs/pull/27/merge.json';
        REF=${{ github.ref }}
        # console.log('github.ref: ' + REF);
        echo "github.ref: $REF"
        # var PATHS = REF.split('/');
        IFS='/' read -ra PATHS <<< "$REF"
        # var BRANCH_NAME = PATHS[1] + '_' + PATHS[2];
        BRANCH_NAME="${PATHS[1]}_${PATHS[2]}"
        # console.log(BRANCH_NAME); // 'pull_27'
        echo $BRANCH_NAME
        # process.env.BRANCH = 'pull_27';
        echo "BRANCH=$(echo ${BRANCH_NAME})" >> $GITHUB_ENV
    - name: Get Angular Coverage Value
      run: |
        COVERAGE="$(jq '.total.lines.pct | tonumber | floor' ./coverage/angular/coverage-summary.json || echo 0)"
        echo "COVERAGE_ANGULAR=$(echo ${COVERAGE})" >> $GITHUB_ENV
    - name: Get Electron Coverage Value
      run: |
        COVERAGE="$(jq '.total.lines.pct | tonumber | floor' ./coverage/electron/coverage-summary.json || echo 0)"
        echo "COVERAGE_ELECTRON=$(echo ${COVERAGE})" >> $GITHUB_ENV
    - name: Create Angular Coverage Badge
      uses: schneegans/dynamic-badges-action@v1.6.0
      with:
        auth: ${{ secrets.GIST_SECRET }}
        gistID: 8909b175390d64b89f1d8e58d6e430e7
        filename: songpile__angular__${{ env.BRANCH }}.json
        label: Angular Coverage
        labelColor: darkblue
        message: ${{ env.COVERAGE_ANGULAR }}%
        namedLogo: angular
        logoColor: white
        valColorRange: ${{ env.COVERAGE_ANGULAR }}
        maxColorRange: 90
        minColorRange: 50
    - name: Create Electron Coverage Badge
      uses: schneegans/dynamic-badges-action@v1.6.0
      with:
        auth: ${{ secrets.GIST_SECRET }}
        gistID: 8909b175390d64b89f1d8e58d6e430e7
        filename: songpile__electron__${{ env.BRANCH }}.json
        label: Electron Coverage
        labelColor: darkblue
        message: ${{ env.COVERAGE_ELECTRON }}%
        namedLogo: electron
        logoColor: white
        valColorRange: ${{ env.COVERAGE_ELECTRON }}
        maxColorRange: 90
        minColorRange: 50
